
function mips_top_config(this_block)

  % Revision History:
  %
  %   28-Oct-2015  (15:49 hours):
  %     Original code was machine generated by Xilinx's System Generator after parsing
  %     H:\dsho996\mips_top.v
  %
  %

  this_block.setTopLevelLanguage('Verilog');

  this_block.setEntityName('mips_top');

  % System Generator has to assume that your entity  has a combinational feed through; 
  %   if it  doesn't, then comment out the following line:
  this_block.tagAsCombinational;


  this_block.addSimulinkOutport('alu_aa');
  this_block.addSimulinkOutport('alu_bb');
  this_block.addSimulinkOutport('pc');
  this_block.addSimulinkOutport('alu_output');
  this_block.addSimulinkOutport('reg_s1');
  this_block.addSimulinkOutport('reg_s2');
  this_block.addSimulinkOutport('ctrl_regdst');
  this_block.addSimulinkOutport('ctrl_alub');
  this_block.addSimulinkOutport('ctrl_branch');
  this_block.addSimulinkOutport('ctrl_regwrite');

  alu_aa_port = this_block.port('alu_aa');
  alu_aa_port.setType('UFix_32_0');
  alu_bb_port = this_block.port('alu_bb');
  alu_bb_port.setType('UFix_32_0');
  pc_port = this_block.port('pc');
  pc_port.setType('UFix_32_0');
  alu_output_port = this_block.port('alu_output');
  alu_output_port.setType('UFix_32_0');
  reg_s1_port = this_block.port('reg_s1');
  reg_s1_port.setType('UFix_5_0');
  reg_s2_port = this_block.port('reg_s2');
  reg_s2_port.setType('UFix_5_0');
  ctrl_regdst_port = this_block.port('ctrl_regdst');
  ctrl_regdst_port.setType('UFix_1_0');
  ctrl_regdst_port.useHDLVector(false);
  ctrl_alub_port = this_block.port('ctrl_alub');
  ctrl_alub_port.setType('UFix_1_0');
  ctrl_alub_port.useHDLVector(false);
  ctrl_branch_port = this_block.port('ctrl_branch');
  ctrl_branch_port.setType('UFix_1_0');
  ctrl_branch_port.useHDLVector(false);
  ctrl_regwrite_port = this_block.port('ctrl_regwrite');
  ctrl_regwrite_port.setType('UFix_1_0');
  ctrl_regwrite_port.useHDLVector(false);


  % Since the block has no inputs,  assuming output runs at system rate:
  outputRate = 1; 
  this_block.addClkCEPair('clk','ce',outputRate); 
  % (!) You may wish to modify this behavior.
  %     It is possible to create a black box from which the
  %     output rate is set from the block parameterization GUI;
  %     consult the System Generator documentation for details.
  for i = 1:this_block.numSimulinkOutports 
     this_block.outport(i).setRate(outputRate); 
  end 
    % (!) Set the inout port rate to be the same as the first input 
    %     rate. Change the following code if this is untrue.
    uniqueInputRates = unique(this_block.getInputRates);


  % Add addtional source files as needed.
  %  |-------------
  %  | Add files in the order in which they should be compiled.
  %  | If two files "a.vhd" and "b.vhd" contain the entities
  %  | entity_a and entity_b, and entity_a contains a
  %  | component of type entity_b, the correct sequence of
  %  | addFile() calls would be:
  %  |    this_block.addFile('b.vhd');
  %  |    this_block.addFile('a.vhd');
  %  |-------------

  %    this_block.addFile('');
  %    this_block.addFile('');
  this_block.addFile('mips_top.v');
  this_block.addFile('alu.v');
  this_block.addFile('alucontrol.v');
  this_block.addFile('control.v');
  this_block.addFile('datamem.v');
  this_block.addFile('instrmem.v');
  this_block.addFile('pc.v');
  this_block.addFile('regblock.v');
  this_block.addFile('signextend.v');

return;


